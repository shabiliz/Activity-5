//NumOut(x,y,number)
//TextOut(x,y,string)
//ButtonPressed(BTNCENTER,1)
//ButtonPressed(BTNRIGHT,1)
//ButtonPressed(BTNLEFT,1)
#include "NXCDefs.h"

int i, d1, a1, d2, a2, d3, a3;

//Reset all value
sub reset()
{
d1=0;
a1=0;
d2=0;
a2=0;
d3=0;
a3=0;
}

//home screen event
sub homescreen()
{

i=1;
ClearScreen();
TextOut(0,LCD_LINE1,"    GROUP C     ");
Wait(500);
TextOut(0,LCD_LINE3," Enter 3 Angle and Distance");
Wait(500);

while(!ButtonPressed(BTNCENTER,1))
{
TextOut(8,LCD_LINE7,"Push to begin  ");
if(i>8)
{
if(i==16) i=1;
TextOut(0,LCD_LINE7,"                 ");
}

Wait(50);
i++;
}
until(!ButtonPressed(BTNCENTER,1));
ClearScreen();
TextOut(0,LCD_LINE2,"Press Right Btn");
Wait(500);
TextOut(0,LCD_LINE3,"To add value");
Wait(500);
TextOut(0,LCD_LINE5,"Press Left Btn");
Wait(500);
TextOut(0,LCD_LINE6,"To reduce value");
Wait(500);
}


///////////////////////////////////////////////
//receiving value a1 event
sub angle1()
{
ClearScreen();
TextOut(0,LCD_LINE2,"Angle 1*");

while(!ButtonPressed(BTNCENTER,1))
{
if(ButtonPressed(BTNRIGHT,1))
{
ClearScreen();
TextOut(0,LCD_LINE2,"Angle 1*");
Wait(500);
a1=a1+5;
NumOut(41,LCD_LINE6,a1);
}

if(ButtonPressed(BTNLEFT,1))
{
ClearScreen();
TextOut(0,LCD_LINE2,"Angle 1*");
Wait(500);
a1=a1-5;
NumOut(41,LCD_LINE6,a1);
}

}
until(!ButtonPressed(BTNCENTER,1));
}

//receiving value d1 event
sub distance1()
{
ClearScreen();
TextOut(0,LCD_LINE2,"Distance 1");

while(!ButtonPressed(BTNCENTER,1))
{
if(ButtonPressed(BTNRIGHT,1))
{
ClearScreen();
TextOut(0,LCD_LINE2,"Distance 1");
Wait(500);
d1=d1+5;
NumOut(41,LCD_LINE6,d1);
}

if(ButtonPressed(BTNLEFT,1))
{
ClearScreen();
TextOut(0,LCD_LINE2,"Distance 1");
Wait(500);
d1=d1-5;
NumOut(41,LCD_LINE6,d1);
}

}
until(!ButtonPressed(BTNCENTER,1));
}
///////////////////////////////////////////////
//receiving value a2 event
sub angle2()
{
ClearScreen();
TextOut(0,LCD_LINE2,"Angle 2*");

while(!ButtonPressed(BTNCENTER,1))
{
if(ButtonPressed(BTNRIGHT,1))
{
ClearScreen();
TextOut(0,LCD_LINE2,"Angle 2*");
Wait(500);
a2=a2+5;
NumOut(41,LCD_LINE6,a2);
}

if(ButtonPressed(BTNLEFT,1))
{
ClearScreen();
TextOut(0,LCD_LINE2,"Angle 2*");
Wait(500);
a2=a2-5;
NumOut(41,LCD_LINE6,a2);
}

}
until(!ButtonPressed(BTNCENTER,1));
}

//receiving value d2 event
sub distance2()
{
ClearScreen();
TextOut(0,LCD_LINE2,"Distance 2");

while(!ButtonPressed(BTNCENTER,1))
{
if(ButtonPressed(BTNRIGHT,1))
{
ClearScreen();
TextOut(0,LCD_LINE2,"Distance 2");
Wait(500);
d2=d2+5;
NumOut(41,LCD_LINE6,d2);
}

if(ButtonPressed(BTNLEFT,1))
{
ClearScreen();
TextOut(0,LCD_LINE2,"Distance 2");
Wait(500);

d2=d2-5;
NumOut(41,LCD_LINE6,d2);
}

}
until(!ButtonPressed(BTNCENTER,1));
}

///////////////////////////////////////////////
//receiving value a3 event
sub angle3()
{
ClearScreen();
TextOut(0,LCD_LINE2,"Angle 3*");

while(!ButtonPressed(BTNCENTER,1))
{
if(ButtonPressed(BTNRIGHT,1))
{
ClearScreen();
TextOut(0,LCD_LINE2,"Angle 3*");
Wait(500);
a3=a3+5;
NumOut(41,LCD_LINE6,a3);
}

if(ButtonPressed(BTNLEFT,1))
{
ClearScreen();
TextOut(0,LCD_LINE2,"Angle 3*");
Wait(500);
a3=a3-5;
NumOut(41,LCD_LINE6,a3);
}

}
until(!ButtonPressed(BTNCENTER,1));
}

//receiving value d3 event
sub distance3()
{
ClearScreen();
TextOut(0,LCD_LINE2,"Distance 3");

while(!ButtonPressed(BTNCENTER,1))
{
if(ButtonPressed(BTNRIGHT,1))
{
ClearScreen();
TextOut(0,LCD_LINE2,"Distance 3");
Wait(500);
d3=d3+5;
NumOut(41,LCD_LINE6,d3);
}

if(ButtonPressed(BTNLEFT,1))
{
ClearScreen();
TextOut(0,LCD_LINE2,"Distance 3");
Wait(500);
d3=d3-5;
NumOut(41,LCD_LINE6,d3);
}

}
until(!ButtonPressed(BTNCENTER,1));
}

///////////////////////////////////////////////
//display all
sub displayAll()
{
ClearScreen();


TextOut(0,LCD_LINE1,"Angle 1:");
NumOut(41,LCD_LINE2,a1);
TextOut(0,LCD_LINE3,"Distance 1:");
NumOut(41,LCD_LINE4,d1);

TextOut(0,LCD_LINE5,"Angle 2:");
NumOut(41,LCD_LINE6,a2);
TextOut(0,LCD_LINE7,"Distance 2:");
NumOut(41,LCD_LINE8,d2);
Wait(1000);
ClearScreen();
Wait(500);

TextOut(0,LCD_LINE1,"Angle 3:");
NumOut(41,LCD_LINE2,a3);
TextOut(0,LCD_LINE3,"Distance 3:");
NumOut(41,LCD_LINE4,d3);
Wait(5000);


}

sub movement()
{
int p1 = a1*2;
int p2 = a2*2;
int p3 = a3*2;

if (p1<=0){
RotateMotorEx( OUT_BC, 50, a1*2,-100, true, true);
Wait(1000);
}
else{
RotateMotorEx( OUT_BC, 50, a1*2,100, true, true);
Wait(1000);
}
RotateMotor( OUT_BC, 50, d1*19.8);
Wait(1000);
if (p2<=
RotateMotorEx( OUT_BC, 50, a2*2,100, true, true);
Wait(1000);


RotateMotor( OUT_BC, 50, d2*19.8 );
Wait(1000);

 RotateMotorEx( OUT_BC, 50, a3*2,100, true, true);
Wait(1000);

 RotateMotor( OUT_BC, 50, d3*19.8);
Wait(1000);
Off(OUT_BC);



task main()
{
reset();
homescreen();
angle1();
distance1();
angle2();
distance2();
angle3();
distance3();
displayAll();
movement();
}
